---

# 5. Configure VLANs on nxos1 and nxos2 (use the nxos_vlans module to accomplish this):

# In the same playbook, after the VLANs have been configured, create a new play (or new tasks) that does the following:

# a. Uses the nxos_command module to execute "show vlan | json" and records this output.
# b. Uses Ansible set filters to determine the common VLANs that are configured on both nxos1 and nxos2.
# Print these common VLANs to standard output.
# c. Uses Ansible set filters to determine the unique VLANs that are only configured on nxos1. Print these to standard output.
# d. Uses Ansible set filters to determine the unique VLANS that are only configured on nxos2. Print these to standard output.

# Note, you will probably need to use "hostvars" to accomplish this exercise.
# In other words, when executing on nxos1, you will need to reference the VLANs configured on nxos2 using hostvars['nxos2']...

- name: nxos VLANs play
  hosts: nxos
  gather_facts: False
  tasks:

    - name: Configure VLANs
      cisco.nxos.nxos_vlans:
        config:
          - vlan_id: "{{item.vlan_id}}"
            name: "{{item.name}}"
      loop: "{{vlans}}"
    
    # Exercise 5a   
    - name: Get show vlan JSON output
      cisco.nxos.nxos_command:
        commands: show vlan | json
      register: sh_vl
    
    - name: print JSON
      debug:
        var: sh_vl

    # Exercise 5b
    - name: Parse VLAN dict
      ansible.builtin.set_fact:
        output_vlans: "{{sh_vl.stdout[0].TABLE_vlanbrief.ROW_vlanbrief}}"
    
    - name: Print VLAN dictionary
      debug:
        var: output_vlans
    
    - name: Use concatenation and loop to get list of VLANS
      ansible.builtin.set_fact:
        vlan_list: "{{vlan_list | default([]) + [item['vlanshowbr-vlanid']] }}"
      loop: "{{output_vlans}}"
    
    - name: Print VLAN list
      debug:
        var: vlan_list

    - name: Use intersection to find common VLANS
      ansible.builtin.debug:
        msg: "{{ vlan_list | intersect(hostvars['nxos2']['vlans']) }}"
      when: inventory_hostname == 'nxos1'
    # Exercise 5c
    - name: Unique VLANs to NXOS1
      ansible.builtin.debug:
        msg: "{{ vlan_list | difference(hostvars['nxos2']['vlans']) }}"
      when: inventory_hostname == 'nxos1'
    # Exercise 5d
    - name: Unique VLANs to NXOS2
      ansible.builtin.debug:
        msg: "{{ vlan_list | difference(hostvars['nxos1']['vlans']) }}"
      when: inventory_hostname == 'nxos2'
