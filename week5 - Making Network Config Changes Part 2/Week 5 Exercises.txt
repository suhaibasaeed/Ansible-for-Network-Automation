Exercises:

Our solutions to the exercises can be found at:

https://github.com/twin-bridges/ansible_course/tree/master/class5/exercises


1. Configure the following items on all of the lab network devices (4 x Cisco IOS/IOS-XE devices, 4 x Arista devices, 2 x NX-OS devices, and 2 x Juniper vMX devices):
---
ntp_server1: 130.126.24.24
ntp_server2: 152.2.21.1
domain_name: bogus.com
dns_server1: 8.8.8.8
dns_server2: 8.8.4.4

The above variables should all be stored in group_vars or host_vars. You can use the following templates as a reference for the particular CLI syntax for each platform.

Configuration templates

Your playbook should be idempotent for all the devices. Additionally, you should use the ios_config, eos_config, nxos_config, and junos_config modules to accomplish this task.


2. Repeat exercise1 except now use the "cli_config" module for all of the devices (instead of ios_config, eos_config, nxos_config, and junos_config). Once again your final playbook should be idempotent.

Note, I had to specify "ansible_connection: network_cli" for the Juniper vMXs as the cli_config module requires network_cli.


3a. Using the ios_config module and the configuration hierarchy arguments (for exampe: parents, before, match, replace) configure a ten-line access-list on the cisco5 and cisco6 devices. Here is an example ACL you could use:
ip access-list extended TEST-ANSIBLE1
 permit ip host 10.1.1.1 any
 permit ip host 10.1.1.2 any
 permit ip host 10.1.1.3 any
 permit ip host 10.1.1.4 any
 permit ip host 10.1.1.5 any
 permit ip host 10.1.1.6 any
 permit ip host 10.1.1.7 any
 permit ip host 10.1.1.8 any
 permit ip host 10.1.1.9 any
 permit ip host 10.1.1.10 any

Use the ios_command module to verify that the ACL is configured (basically execute: "show access-list <ACL-NAME>" and then use the debug module to print out the ACL).

Your playbook should be idempotent.


3b. Re-order your access-list such that one of the last three access-list lines is now at the beginning. Additionally convert this moved ACL entry from being a "permit" statement to being a "deny" statement. Ensure that executing your new playbook results in the correct final access-list being configured. For example, my new access-list would look as follows:
ip access-list extended TEST-ANSIBLE1
 deny   ip host 10.1.1.9 any
 permit ip host 10.1.1.1 any
 permit ip host 10.1.1.2 any
 permit ip host 10.1.1.3 any
 permit ip host 10.1.1.4 any
 permit ip host 10.1.1.5 any
 permit ip host 10.1.1.6 any
 permit ip host 10.1.1.7 any
 permit ip host 10.1.1.8 any
 permit ip host 10.1.1.10 any

Once again use the "ios_command" module and the "debug" module to verify that your updated ACL is properly configured.

Your playbook should be idempotent.


4. Using the configurations generated from class3-exercise5 configure both BGP and the relevant interface on both nxos1 and nxos2.

In other words, class3-exercise5 was an exercise where we used Jinja2 to generate both BGP and interface configurations for nxos1 and nxos2, BUT we did not deploy those configurations. Now you should use nxos_config module to deploy those configurations.

Verify the BGP session reached the established using the nxos_command module. For this verification task, you can simply execute "show ip bgp summary" using nxos_command and visually verify its output using the "debug" module.


5. Using an SSH key for authentication, execute the "show users" command on both cisco1 and cisco2. You should use the ios_command module to accomplish this. Remember for this exercise that you will need to use the SSH key located here:

ansible_ssh_private_key_file="~/.ssh/student_key"

Additionally, you will need to switch the "ansible_user" to "student1".


Using the "assert" module, verify that "student1" is present in the output of "show users". This will help verify that you are properly using the SSH key and not accidentally connecting using the "pyclass" username/password.